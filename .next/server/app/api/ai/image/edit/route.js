/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ai/image/edit/route";
exports.ids = ["app/api/ai/image/edit/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fimage%2Fedit%2Froute&page=%2Fapi%2Fai%2Fimage%2Fedit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fimage%2Fedit%2Froute.ts&appDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fimage%2Fedit%2Froute&page=%2Fapi%2Fai%2Fimage%2Fedit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fimage%2Fedit%2Froute.ts&appDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_beihuang_Documents_github_image_editor_src_app_api_ai_image_edit_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/ai/image/edit/route.ts */ \"(rsc)/./src/app/api/ai/image/edit/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ai/image/edit/route\",\n        pathname: \"/api/ai/image/edit\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai/image/edit/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/beihuang/Documents/github/image-editor/src/app/api/ai/image/edit/route.ts\",\n    nextConfigOutput,\n    userland: _Users_beihuang_Documents_github_image_editor_src_app_api_ai_image_edit_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/ai/image/edit/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fimage%2Fedit%2Froute&page=%2Fapi%2Fai%2Fimage%2Fedit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fimage%2Fedit%2Froute.ts&appDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/ai/image/edit/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/ai/image/edit/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_vertex_ai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/vertex-ai */ \"(rsc)/./src/services/vertex-ai.ts\");\n\n\n// 环境变量适配器\nconst getEnv = ()=>({\n        GOOGLE_CLOUD_PROJECT: process.env.GOOGLE_CLOUD_PROJECT,\n        GOOGLE_CLOUD_LOCATION: process.env.GOOGLE_CLOUD_LOCATION || 'global',\n        GOOGLE_SERVICE_ACCOUNT_KEY: process.env.GOOGLE_SERVICE_ACCOUNT_KEY,\n        JWT_SECRET: process.env.JWT_SECRET || '',\n        REPLICATE_API_TOKEN: process.env.REPLICATE_API_TOKEN,\n        // 添加 Cloudflare Workers 兼容的空对象\n        AI: {},\n        DB: {},\n        STORAGE: {},\n        FILES: {}\n    });\nasync function POST(request) {\n    try {\n        const { imageData, instruction, model = 'gemini-2.5-flash-image-preview' } = await request.json();\n        if (!imageData || !instruction) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'imageData and instruction are required'\n            }, {\n                status: 400\n            });\n        }\n        const env = getEnv();\n        // 使用 Vertex AI 进行图像编辑\n        const vertexAI = new _services_vertex_ai__WEBPACK_IMPORTED_MODULE_1__.VertexAIService(env);\n        if (!vertexAI.isAvailable()) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Vertex AI is not configured. Please set GOOGLE_CLOUD_PROJECT and GOOGLE_SERVICE_ACCOUNT_KEY environment variables.'\n            }, {\n                status: 500\n            });\n        }\n        console.log('Using Vertex AI Gemini 2.5 Flash Image Preview for image editing');\n        const result = await vertexAI.editImage(imageData, instruction);\n        if (result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: {\n                    editedImageUrl: result.data.editedImageUrl || imageData,\n                    originalImageUrl: imageData,\n                    instruction: instruction,\n                    model: model,\n                    textResponse: result.data.textResponse,\n                    changes: [\n                        'Applied AI-based enhancement using Vertex AI',\n                        'Processed with Gemini 2.5 Flash Image Preview',\n                        'Applied requested modifications',\n                        'AI-powered image transformation'\n                    ],\n                    confidence: 0.98,\n                    timestamp: result.data.timestamp,\n                    provider: 'vertex-ai'\n                }\n            });\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: result.error || 'Failed to process image with Vertex AI'\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error('Image edit error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function OPTIONS(request) {\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n        status: 200,\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9haS9pbWFnZS9lZGl0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUQ7QUFDRDtBQUV0RCxVQUFVO0FBQ1YsTUFBTUUsU0FBUyxJQUFPO1FBQ3BCQyxzQkFBc0JDLFFBQVFDLEdBQUcsQ0FBQ0Ysb0JBQW9CO1FBQ3RERyx1QkFBdUJGLFFBQVFDLEdBQUcsQ0FBQ0MscUJBQXFCLElBQUk7UUFDNURDLDRCQUE0QkgsUUFBUUMsR0FBRyxDQUFDRSwwQkFBMEI7UUFDbEVDLFlBQVlKLFFBQVFDLEdBQUcsQ0FBQ0csVUFBVSxJQUFJO1FBQ3RDQyxxQkFBcUJMLFFBQVFDLEdBQUcsQ0FBQ0ksbUJBQW1CO1FBQ3BELCtCQUErQjtRQUMvQkMsSUFBSSxDQUFDO1FBQ0xDLElBQUksQ0FBQztRQUNMQyxTQUFTLENBQUM7UUFDVkMsT0FBTyxDQUFDO0lBQ1Y7QUFFTyxlQUFlQyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsRUFBRUMsUUFBUSxnQ0FBZ0MsRUFBRSxHQUFHLE1BQU1ILFFBQVFJLElBQUk7UUFFL0YsSUFBSSxDQUFDSCxhQUFhLENBQUNDLGFBQWE7WUFDOUIsT0FBT2pCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDO2dCQUN2QkMsU0FBUztnQkFDVEMsT0FBTztZQUNULEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUNuQjtRQUVBLE1BQU1qQixNQUFNSDtRQUVaLHNCQUFzQjtRQUN0QixNQUFNcUIsV0FBVyxJQUFJdEIsZ0VBQWVBLENBQUNJO1FBRXJDLElBQUksQ0FBQ2tCLFNBQVNDLFdBQVcsSUFBSTtZQUMzQixPQUFPeEIscURBQVlBLENBQUNtQixJQUFJLENBQUM7Z0JBQ3ZCQyxTQUFTO2dCQUNUQyxPQUFPO1lBQ1QsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQ25CO1FBRUFHLFFBQVFDLEdBQUcsQ0FBQztRQUVaLE1BQU1DLFNBQVMsTUFBTUosU0FBU0ssU0FBUyxDQUFDWixXQUFXQztRQUVuRCxJQUFJVSxPQUFPUCxPQUFPLEVBQUU7WUFDbEIsT0FBT3BCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDO2dCQUN2QkMsU0FBUztnQkFDVFMsTUFBTTtvQkFDSkMsZ0JBQWdCSCxPQUFPRSxJQUFJLENBQUNDLGNBQWMsSUFBSWQ7b0JBQzlDZSxrQkFBa0JmO29CQUNsQkMsYUFBYUE7b0JBQ2JDLE9BQU9BO29CQUNQYyxjQUFjTCxPQUFPRSxJQUFJLENBQUNHLFlBQVk7b0JBQ3RDQyxTQUFTO3dCQUNQO3dCQUNBO3dCQUNBO3dCQUNBO3FCQUNEO29CQUNEQyxZQUFZO29CQUNaQyxXQUFXUixPQUFPRSxJQUFJLENBQUNNLFNBQVM7b0JBQ2hDQyxVQUFVO2dCQUNaO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsT0FBT3BDLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDO2dCQUN2QkMsU0FBUztnQkFDVEMsT0FBT00sT0FBT04sS0FBSyxJQUFJO1lBQ3pCLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUNuQjtJQUNGLEVBQUUsT0FBT0QsT0FBTztRQUNkSSxRQUFRSixLQUFLLENBQUMscUJBQXFCQTtRQUNuQyxPQUFPckIscURBQVlBLENBQUNtQixJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVEMsT0FBTztRQUNULEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ25CO0FBQ0Y7QUFFTyxlQUFlZSxRQUFRdEIsT0FBb0I7SUFDaEQsT0FBTyxJQUFJZixxREFBWUEsQ0FBQyxNQUFNO1FBQzVCc0IsUUFBUTtRQUNSZ0IsU0FBUztZQUNQLCtCQUErQjtZQUMvQixnQ0FBZ0M7WUFDaEMsZ0NBQWdDO1FBQ2xDO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2JlaWh1YW5nL0RvY3VtZW50cy9naXRodWIvaW1hZ2UtZWRpdG9yL3NyYy9hcHAvYXBpL2FpL2ltYWdlL2VkaXQvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgVmVydGV4QUlTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy92ZXJ0ZXgtYWknXG5cbi8vIOeOr+Wig+WPmOmHj+mAgumFjeWZqFxuY29uc3QgZ2V0RW52ID0gKCkgPT4gKHtcbiAgR09PR0xFX0NMT1VEX1BST0pFQ1Q6IHByb2Nlc3MuZW52LkdPT0dMRV9DTE9VRF9QUk9KRUNULFxuICBHT09HTEVfQ0xPVURfTE9DQVRJT046IHByb2Nlc3MuZW52LkdPT0dMRV9DTE9VRF9MT0NBVElPTiB8fCAnZ2xvYmFsJyxcbiAgR09PR0xFX1NFUlZJQ0VfQUNDT1VOVF9LRVk6IHByb2Nlc3MuZW52LkdPT0dMRV9TRVJWSUNFX0FDQ09VTlRfS0VZLFxuICBKV1RfU0VDUkVUOiBwcm9jZXNzLmVudi5KV1RfU0VDUkVUIHx8ICcnLFxuICBSRVBMSUNBVEVfQVBJX1RPS0VOOiBwcm9jZXNzLmVudi5SRVBMSUNBVEVfQVBJX1RPS0VOLFxuICAvLyDmt7vliqAgQ2xvdWRmbGFyZSBXb3JrZXJzIOWFvOWuueeahOepuuWvueixoVxuICBBSToge30gYXMgYW55LFxuICBEQjoge30gYXMgYW55LFxuICBTVE9SQUdFOiB7fSBhcyBhbnksXG4gIEZJTEVTOiB7fSBhcyBhbnlcbn0pXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpbWFnZURhdGEsIGluc3RydWN0aW9uLCBtb2RlbCA9ICdnZW1pbmktMi41LWZsYXNoLWltYWdlLXByZXZpZXcnIH0gPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuXG4gICAgaWYgKCFpbWFnZURhdGEgfHwgIWluc3RydWN0aW9uKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdpbWFnZURhdGEgYW5kIGluc3RydWN0aW9uIGFyZSByZXF1aXJlZCdcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBlbnYgPSBnZXRFbnYoKVxuXG4gICAgLy8g5L2/55SoIFZlcnRleCBBSSDov5vooYzlm77lg4/nvJbovpFcbiAgICBjb25zdCB2ZXJ0ZXhBSSA9IG5ldyBWZXJ0ZXhBSVNlcnZpY2UoZW52KVxuXG4gICAgaWYgKCF2ZXJ0ZXhBSS5pc0F2YWlsYWJsZSgpKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdWZXJ0ZXggQUkgaXMgbm90IGNvbmZpZ3VyZWQuIFBsZWFzZSBzZXQgR09PR0xFX0NMT1VEX1BST0pFQ1QgYW5kIEdPT0dMRV9TRVJWSUNFX0FDQ09VTlRfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlcy4nXG4gICAgICB9LCB7IHN0YXR1czogNTAwIH0pXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ1VzaW5nIFZlcnRleCBBSSBHZW1pbmkgMi41IEZsYXNoIEltYWdlIFByZXZpZXcgZm9yIGltYWdlIGVkaXRpbmcnKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHZlcnRleEFJLmVkaXRJbWFnZShpbWFnZURhdGEsIGluc3RydWN0aW9uKVxuICAgIFxuICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIGVkaXRlZEltYWdlVXJsOiByZXN1bHQuZGF0YS5lZGl0ZWRJbWFnZVVybCB8fCBpbWFnZURhdGEsXG4gICAgICAgICAgb3JpZ2luYWxJbWFnZVVybDogaW1hZ2VEYXRhLFxuICAgICAgICAgIGluc3RydWN0aW9uOiBpbnN0cnVjdGlvbixcbiAgICAgICAgICBtb2RlbDogbW9kZWwsXG4gICAgICAgICAgdGV4dFJlc3BvbnNlOiByZXN1bHQuZGF0YS50ZXh0UmVzcG9uc2UsXG4gICAgICAgICAgY2hhbmdlczogW1xuICAgICAgICAgICAgJ0FwcGxpZWQgQUktYmFzZWQgZW5oYW5jZW1lbnQgdXNpbmcgVmVydGV4IEFJJyxcbiAgICAgICAgICAgICdQcm9jZXNzZWQgd2l0aCBHZW1pbmkgMi41IEZsYXNoIEltYWdlIFByZXZpZXcnLFxuICAgICAgICAgICAgJ0FwcGxpZWQgcmVxdWVzdGVkIG1vZGlmaWNhdGlvbnMnLFxuICAgICAgICAgICAgJ0FJLXBvd2VyZWQgaW1hZ2UgdHJhbnNmb3JtYXRpb24nXG4gICAgICAgICAgXSxcbiAgICAgICAgICBjb25maWRlbmNlOiAwLjk4LFxuICAgICAgICAgIHRpbWVzdGFtcDogcmVzdWx0LmRhdGEudGltZXN0YW1wLFxuICAgICAgICAgIHByb3ZpZGVyOiAndmVydGV4LWFpJ1xuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHJlc3VsdC5lcnJvciB8fCAnRmFpbGVkIHRvIHByb2Nlc3MgaW1hZ2Ugd2l0aCBWZXJ0ZXggQUknXG4gICAgICB9LCB7IHN0YXR1czogNTAwIH0pXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ltYWdlIGVkaXQgZXJyb3I6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBPUFRJT05TKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHtcbiAgICBzdGF0dXM6IDIwMCxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxuICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnR0VULCBQT1NULCBQVVQsIERFTEVURSwgT1BUSU9OUycsXG4gICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nLFxuICAgIH0sXG4gIH0pXG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiVmVydGV4QUlTZXJ2aWNlIiwiZ2V0RW52IiwiR09PR0xFX0NMT1VEX1BST0pFQ1QiLCJwcm9jZXNzIiwiZW52IiwiR09PR0xFX0NMT1VEX0xPQ0FUSU9OIiwiR09PR0xFX1NFUlZJQ0VfQUNDT1VOVF9LRVkiLCJKV1RfU0VDUkVUIiwiUkVQTElDQVRFX0FQSV9UT0tFTiIsIkFJIiwiREIiLCJTVE9SQUdFIiwiRklMRVMiLCJQT1NUIiwicmVxdWVzdCIsImltYWdlRGF0YSIsImluc3RydWN0aW9uIiwibW9kZWwiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwic3RhdHVzIiwidmVydGV4QUkiLCJpc0F2YWlsYWJsZSIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHQiLCJlZGl0SW1hZ2UiLCJkYXRhIiwiZWRpdGVkSW1hZ2VVcmwiLCJvcmlnaW5hbEltYWdlVXJsIiwidGV4dFJlc3BvbnNlIiwiY2hhbmdlcyIsImNvbmZpZGVuY2UiLCJ0aW1lc3RhbXAiLCJwcm92aWRlciIsIk9QVElPTlMiLCJoZWFkZXJzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/ai/image/edit/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/vertex-ai.ts":
/*!***********************************!*\
  !*** ./src/services/vertex-ai.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VertexAIService: () => (/* binding */ VertexAIService)\n/* harmony export */ });\n/* harmony import */ var google_auth_library__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! google-auth-library */ \"(rsc)/./node_modules/google-auth-library/build/src/index.js\");\n\n/**\n * Vertex AI 服务类\n * 集成 Google Vertex AI 的 Gemini 2.5 Flash Image Preview 模型\n */ class VertexAIService {\n    constructor(env){\n        this.auth = null;\n        this.projectId = null;\n        this.location = 'global';\n        this.env = env;\n        this.initializeVertexAI();\n    }\n    /**\n   * 初始化 Vertex AI 客户端\n   */ initializeVertexAI() {\n        try {\n            // 检查必要的环境变量\n            const project = this.env.GOOGLE_CLOUD_PROJECT;\n            const location = this.env.GOOGLE_CLOUD_LOCATION || 'global';\n            const serviceAccountKey = this.env.GOOGLE_SERVICE_ACCOUNT_KEY;\n            const nodeEnv = this.env.NODE_ENV || 'production';\n            if (!project || !serviceAccountKey) {\n                console.warn('GOOGLE_CLOUD_PROJECT or GOOGLE_SERVICE_ACCOUNT_KEY not configured, Vertex AI will not be available');\n                return;\n            }\n            this.projectId = project;\n            this.location = location;\n            console.log(`Vertex AI initialized for project: ${project}, location: ${location}`);\n            // 解析服务账号密钥\n            let credentials;\n            try {\n                credentials = typeof serviceAccountKey === 'string' ? JSON.parse(serviceAccountKey) : serviceAccountKey;\n            } catch (error) {\n                console.error('Failed to parse GOOGLE_SERVICE_ACCOUNT_KEY:', error);\n                return;\n            }\n            // 初始化 Google Auth 客户端\n            this.auth = new google_auth_library__WEBPACK_IMPORTED_MODULE_0__.GoogleAuth({\n                credentials: credentials,\n                scopes: [\n                    'https://www.googleapis.com/auth/cloud-platform'\n                ]\n            });\n            console.log('Vertex AI initialized successfully');\n        } catch (error) {\n            console.error('Failed to initialize Vertex AI:', error instanceof Error ? error.message : String(error));\n            this.auth = null;\n        }\n    }\n    /**\n   * 检查 Vertex AI 是否可用\n   */ isAvailable() {\n        return this.auth !== null && this.projectId !== null;\n    }\n    /**\n   * 获取访问令牌\n   */ async getAccessToken() {\n        if (!this.auth) {\n            throw new Error('Google Auth not initialized');\n        }\n        const client = await this.auth.getClient();\n        const accessToken = await client.getAccessToken();\n        if (!accessToken.token) {\n            throw new Error('Failed to get access token');\n        }\n        return accessToken.token;\n    }\n    /**\n   * 带重试机制的 fetch\n   */ async fetchWithRetry(url, options, maxRetries = 3) {\n        let lastError = null;\n        for(let attempt = 1; attempt <= maxRetries; attempt++){\n            try {\n                console.log(`Attempt ${attempt}/${maxRetries} to call Vertex AI API...`);\n                // 创建 AbortController 用于超时控制\n                const controller = new AbortController();\n                const timeoutId = setTimeout(()=>controller.abort(), 30000); // 30秒超时\n                const response = await fetch(url, {\n                    ...options,\n                    signal: controller.signal\n                });\n                clearTimeout(timeoutId);\n                if (response.ok) {\n                    console.log('Vertex AI API call successful');\n                    return response;\n                } else {\n                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                }\n            } catch (error) {\n                lastError = error;\n                console.warn(`Attempt ${attempt} failed:`, error instanceof Error ? error.message : String(error));\n                if (attempt < maxRetries) {\n                    const delay = Math.pow(2, attempt) * 1000; // 指数退避\n                    console.log(`Waiting ${delay}ms before retry...`);\n                    await new Promise((resolve)=>setTimeout(resolve, delay));\n                }\n            }\n        }\n        console.error(`All ${maxRetries} attempts failed`);\n        throw lastError || new Error('All retry attempts failed');\n    }\n    /**\n   * 生成配置对象\n   */ getGenerationConfig() {\n        return {\n            maxOutputTokens: 32768,\n            temperature: 1,\n            topP: 0.95,\n            responseModalities: [\n                \"TEXT\",\n                \"IMAGE\"\n            ],\n            safetySettings: [\n                {\n                    category: 'HARM_CATEGORY_HATE_SPEECH',\n                    threshold: 'OFF'\n                },\n                {\n                    category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n                    threshold: 'OFF'\n                },\n                {\n                    category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n                    threshold: 'OFF'\n                },\n                {\n                    category: 'HARM_CATEGORY_HARASSMENT',\n                    threshold: 'OFF'\n                }\n            ]\n        };\n    }\n    /**\n   * 将 base64 图片转换为 Vertex AI 格式\n   */ base64ToVertexAIImage(base64Data) {\n        // 移除 data:image/xxx;base64, 前缀\n        const base64Content = base64Data.replace(/^data:image\\/[a-z]+;base64,/, '');\n        // 检测 MIME 类型\n        let mimeType = 'image/jpeg';\n        if (base64Data.startsWith('data:image/png')) {\n            mimeType = 'image/png';\n        } else if (base64Data.startsWith('data:image/webp')) {\n            mimeType = 'image/webp';\n        }\n        return {\n            inlineData: {\n                mimeType: mimeType,\n                data: base64Content\n            }\n        };\n    }\n    /**\n   * 使用 Gemini 进行图像分析\n   */ async analyzeImage(imageData, prompt = \"Describe this image in detail\") {\n        if (!this.isAvailable()) {\n            return {\n                success: false,\n                error: 'Vertex AI is not available. Please check your configuration.'\n            };\n        }\n        try {\n            const model = 'gemini-2.5-flash-image-preview';\n            // 准备图像数据\n            const image = this.base64ToVertexAIImage(imageData);\n            // 准备分析提示\n            const text = {\n                text: prompt\n            };\n            // 构建请求\n            const req = {\n                model: model,\n                contents: [\n                    {\n                        role: 'user',\n                        parts: [\n                            image,\n                            text\n                        ]\n                    }\n                ],\n                config: {\n                    ...this.getGenerationConfig(),\n                    responseModalities: [\n                        \"TEXT\"\n                    ] // 只需要文本响应\n                }\n            };\n            console.log('Analyzing image with Vertex AI Gemini...');\n            // 调用 Vertex AI REST API\n            const accessToken = await this.getAccessToken();\n            const url = `https://${this.location}-aiplatform.googleapis.com/v1/projects/${this.projectId}/locations/${this.location}/publishers/google/models/${model}:generateContent`;\n            const response = await this.fetchWithRetry(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    contents: req.contents,\n                    generationConfig: req.config\n                })\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Vertex AI API error: ${response.status} ${response.statusText} - ${errorText}`);\n            }\n            const result = await response.json();\n            let textResponse = '';\n            // 处理响应\n            if (result.candidates && result.candidates[0]?.content?.parts) {\n                for (const part of result.candidates[0].content.parts){\n                    if (part.text) {\n                        textResponse += part.text;\n                    }\n                }\n            }\n            return {\n                success: true,\n                data: {\n                    analysis: textResponse,\n                    model: model,\n                    prompt: prompt,\n                    timestamp: new Date().toISOString()\n                }\n            };\n        } catch (error) {\n            console.error('Vertex AI image analysis error:', error);\n            return {\n                success: false,\n                error: `Failed to analyze image with Vertex AI: ${error instanceof Error ? error.message : 'Unknown error'}`\n            };\n        }\n    }\n    /**\n   * 生成图像（如果模型支持）\n   */ async generateImage(prompt) {\n        if (!this.isAvailable()) {\n            return {\n                success: false,\n                error: 'Vertex AI is not available. Please check your configuration.'\n            };\n        }\n        try {\n            const model = 'gemini-2.5-flash-image-preview';\n            // 准备生成提示\n            const text = {\n                text: `Generate an image: ${prompt}`\n            };\n            // 构建请求\n            const req = {\n                model: model,\n                contents: [\n                    {\n                        role: 'user',\n                        parts: [\n                            text\n                        ]\n                    }\n                ],\n                config: this.getGenerationConfig()\n            };\n            console.log('Generating image with Vertex AI Gemini...');\n            // 调用 Vertex AI REST API\n            const accessToken = await this.getAccessToken();\n            const url = `https://${this.location}-aiplatform.googleapis.com/v1/projects/${this.projectId}/locations/${this.location}/publishers/google/models/${model}:generateContent`;\n            const response = await this.fetchWithRetry(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    contents: req.contents,\n                    generationConfig: req.config\n                })\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Vertex AI API error: ${response.status} ${response.statusText} - ${errorText}`);\n            }\n            const result = await response.json();\n            let textResponse = '';\n            let imageResponse = null;\n            // 处理响应\n            if (result.candidates && result.candidates[0]?.content?.parts) {\n                for (const part of result.candidates[0].content.parts){\n                    if (part.text) {\n                        textResponse += part.text;\n                    } else if (part.inlineData && part.inlineData.mimeType?.startsWith('image/')) {\n                        imageResponse = {\n                            mimeType: part.inlineData.mimeType,\n                            data: part.inlineData.data\n                        };\n                    }\n                }\n            }\n            // 构建响应数据\n            const responseData = {\n                textResponse: textResponse,\n                imageResponse: imageResponse,\n                model: model,\n                prompt: prompt,\n                timestamp: new Date().toISOString()\n            };\n            // 如果有图像响应，转换为 data URL\n            if (imageResponse) {\n                responseData.generatedImageUrl = `data:${imageResponse.mimeType};base64,${imageResponse.data}`;\n            }\n            return {\n                success: true,\n                data: responseData\n            };\n        } catch (error) {\n            console.error('Vertex AI image generation error:', error);\n            return {\n                success: false,\n                error: `Failed to generate image with Vertex AI: ${error instanceof Error ? error.message : 'Unknown error'}`\n            };\n        }\n    }\n    /**\n   * 编辑图像（基于输入图像和提示）\n   */ async editImage(prompt, inputImage) {\n        if (!this.isAvailable()) {\n            return {\n                success: false,\n                error: 'Vertex AI is not available. Please check your configuration.'\n            };\n        }\n        try {\n            const model = 'gemini-2.5-flash-image-preview';\n            // 处理输入图像（移除data URL前缀）\n            const imageData = inputImage.includes(',') ? inputImage.split(',')[1] : inputImage;\n            const mimeType = inputImage.includes('data:') ? inputImage.split(';')[0].replace('data:', '') : 'image/png';\n            // 准备请求内容\n            const parts = [\n                {\n                    inlineData: {\n                        mimeType: mimeType,\n                        data: imageData\n                    }\n                },\n                {\n                    text: prompt\n                }\n            ];\n            // 构建请求\n            const req = {\n                model: model,\n                contents: [\n                    {\n                        role: 'user',\n                        parts: parts\n                    }\n                ],\n                config: {\n                    ...this.getGenerationConfig(),\n                    responseModalities: [\n                        'TEXT',\n                        'IMAGE'\n                    ]\n                }\n            };\n            console.log('Editing image with Vertex AI Gemini...');\n            // 调用 Vertex AI REST API\n            const accessToken = await this.getAccessToken();\n            const url = `https://${this.location}-aiplatform.googleapis.com/v1/projects/${this.projectId}/locations/${this.location}/publishers/google/models/${model}:generateContent`;\n            const response = await this.fetchWithRetry(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    contents: req.contents,\n                    generationConfig: req.config\n                })\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Vertex AI API error: ${response.status} ${response.statusText} - ${errorText}`);\n            }\n            const result = await response.json();\n            let textResponse = '';\n            let imageResponse = null;\n            // 处理响应\n            if (result.candidates && result.candidates[0]?.content?.parts) {\n                for (const part of result.candidates[0].content.parts){\n                    if (part.text) {\n                        textResponse += part.text;\n                    } else if (part.inlineData && part.inlineData.mimeType?.startsWith('image/')) {\n                        imageResponse = {\n                            mimeType: part.inlineData.mimeType,\n                            data: part.inlineData.data\n                        };\n                    }\n                }\n            }\n            // 构建响应数据\n            const responseData = {\n                textResponse: textResponse,\n                imageResponse: imageResponse,\n                model: model,\n                prompt: prompt,\n                timestamp: new Date().toISOString()\n            };\n            // 如果有图像响应，转换为 data URL\n            if (imageResponse) {\n                responseData.generatedImageUrl = `data:${imageResponse.mimeType};base64,${imageResponse.data}`;\n            }\n            return {\n                success: true,\n                data: responseData\n            };\n        } catch (error) {\n            console.error('Vertex AI image editing error:', error);\n            return {\n                success: false,\n                error: `Failed to edit image with Vertex AI: ${error instanceof Error ? error.message : 'Unknown error'}`\n            };\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/vertex-ai.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/google-auth-library","vendor-chunks/uuid","vendor-chunks/gaxios","vendor-chunks/node-fetch","vendor-chunks/jws","vendor-chunks/debug","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/supports-color","vendor-chunks/safe-buffer","vendor-chunks/ms","vendor-chunks/jwa","vendor-chunks/is-stream","vendor-chunks/has-flag","vendor-chunks/gtoken","vendor-chunks/extend","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fai%2Fimage%2Fedit%2Froute&page=%2Fapi%2Fai%2Fimage%2Fedit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Fimage%2Fedit%2Froute.ts&appDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbeihuang%2FDocuments%2Fgithub%2Fimage-editor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();